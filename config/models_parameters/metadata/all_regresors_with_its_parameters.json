{
    "ARDRegression": [
        "alpha_1",
        "alpha_2",
        "compute_score",
        "copy_X",
        "fit_intercept",
        "lambda_1",
        "lambda_2",
        "max_iter",
        "n_iter",
        "threshold_lambda",
        "tol",
        "verbose"
    ],
    "AdaBoostRegressor": [
        "base_estimator",
        "estimator",
        "learning_rate",
        "loss",
        "n_estimators",
        "random_state"
    ],
    "BaggingRegressor": [
        "base_estimator",
        "bootstrap",
        "bootstrap_features",
        "estimator",
        "max_features",
        "max_samples",
        "n_estimators",
        "n_jobs",
        "oob_score",
        "random_state",
        "verbose",
        "warm_start"
    ],
    "BayesianRidge": [
        "alpha_1",
        "alpha_2",
        "alpha_init",
        "compute_score",
        "copy_X",
        "fit_intercept",
        "lambda_1",
        "lambda_2",
        "lambda_init",
        "max_iter",
        "n_iter",
        "tol",
        "verbose"
    ],
    "CCA": [
        "copy",
        "max_iter",
        "n_components",
        "scale",
        "tol"
    ],
    "DecisionTreeRegressor": [
        "ccp_alpha",
        "criterion",
        "max_depth",
        "max_features",
        "max_leaf_nodes",
        "min_impurity_decrease",
        "min_samples_leaf",
        "min_samples_split",
        "min_weight_fraction_leaf",
        "random_state",
        "splitter"
    ],
    "DummyRegressor": [
        "constant",
        "quantile",
        "strategy"
    ],
    "ElasticNet": [
        "alpha",
        "copy_X",
        "fit_intercept",
        "l1_ratio",
        "max_iter",
        "positive",
        "precompute",
        "random_state",
        "selection",
        "tol",
        "warm_start"
    ],
    "ElasticNetCV": [
        "alphas",
        "copy_X",
        "cv",
        "eps",
        "fit_intercept",
        "l1_ratio",
        "max_iter",
        "n_alphas",
        "n_jobs",
        "positive",
        "precompute",
        "random_state",
        "selection",
        "tol",
        "verbose"
    ],
    "ExtraTreeRegressor": [
        "ccp_alpha",
        "criterion",
        "max_depth",
        "max_features",
        "max_leaf_nodes",
        "min_impurity_decrease",
        "min_samples_leaf",
        "min_samples_split",
        "min_weight_fraction_leaf",
        "random_state",
        "splitter"
    ],
    "ExtraTreesRegressor": [
        "bootstrap",
        "ccp_alpha",
        "criterion",
        "max_depth",
        "max_features",
        "max_leaf_nodes",
        "max_samples",
        "min_impurity_decrease",
        "min_samples_leaf",
        "min_samples_split",
        "min_weight_fraction_leaf",
        "n_estimators",
        "n_jobs",
        "oob_score",
        "random_state",
        "verbose",
        "warm_start"
    ],
    "GammaRegressor": [
        "alpha",
        "fit_intercept",
        "max_iter",
        "solver",
        "tol",
        "verbose",
        "warm_start"
    ],
    "GaussianProcessRegressor": [
        "alpha",
        "copy_X_train",
        "kernel",
        "n_restarts_optimizer",
        "n_targets",
        "normalize_y",
        "optimizer",
        "random_state"
    ],
    "GradientBoostingRegressor": [
        "alpha",
        "ccp_alpha",
        "criterion",
        "init",
        "learning_rate",
        "loss",
        "max_depth",
        "max_features",
        "max_leaf_nodes",
        "min_impurity_decrease",
        "min_samples_leaf",
        "min_samples_split",
        "min_weight_fraction_leaf",
        "n_estimators",
        "n_iter_no_change",
        "random_state",
        "subsample",
        "tol",
        "validation_fraction",
        "verbose",
        "warm_start"
    ],
    "HistGradientBoostingRegressor": [
        "categorical_features",
        "early_stopping",
        "interaction_cst",
        "l2_regularization",
        "learning_rate",
        "loss",
        "max_bins",
        "max_depth",
        "max_iter",
        "max_leaf_nodes",
        "min_samples_leaf",
        "monotonic_cst",
        "n_iter_no_change",
        "quantile",
        "random_state",
        "scoring",
        "tol",
        "validation_fraction",
        "verbose",
        "warm_start"
    ],
    "HuberRegressor": [
        "alpha",
        "epsilon",
        "fit_intercept",
        "max_iter",
        "tol",
        "warm_start"
    ],
    "IsotonicRegression": [
        "increasing",
        "out_of_bounds",
        "y_max",
        "y_min"
    ],
    "KNeighborsRegressor": [
        "algorithm",
        "leaf_size",
        "metric",
        "metric_params",
        "n_jobs",
        "n_neighbors",
        "p",
        "weights"
    ],
    "KernelRidge": [
        "alpha",
        "coef0",
        "degree",
        "gamma",
        "kernel",
        "kernel_params"
    ],
    "Lars": [
        "copy_X",
        "eps",
        "fit_intercept",
        "fit_path",
        "jitter",
        "n_nonzero_coefs",
        "normalize",
        "precompute",
        "random_state",
        "verbose"
    ],
    "LarsCV": [
        "copy_X",
        "cv",
        "eps",
        "fit_intercept",
        "max_iter",
        "max_n_alphas",
        "n_jobs",
        "normalize",
        "precompute",
        "verbose"
    ],
    "Lasso": [
        "alpha",
        "copy_X",
        "fit_intercept",
        "max_iter",
        "positive",
        "precompute",
        "random_state",
        "selection",
        "tol",
        "warm_start"
    ],
    "LassoCV": [
        "alphas",
        "copy_X",
        "cv",
        "eps",
        "fit_intercept",
        "max_iter",
        "n_alphas",
        "n_jobs",
        "positive",
        "precompute",
        "random_state",
        "selection",
        "tol",
        "verbose"
    ],
    "LassoLars": [
        "alpha",
        "copy_X",
        "eps",
        "fit_intercept",
        "fit_path",
        "jitter",
        "max_iter",
        "normalize",
        "positive",
        "precompute",
        "random_state",
        "verbose"
    ],
    "LassoLarsCV": [
        "copy_X",
        "cv",
        "eps",
        "fit_intercept",
        "max_iter",
        "max_n_alphas",
        "n_jobs",
        "normalize",
        "positive",
        "precompute",
        "verbose"
    ],
    "LassoLarsIC": [
        "copy_X",
        "criterion",
        "eps",
        "fit_intercept",
        "max_iter",
        "noise_variance",
        "normalize",
        "positive",
        "precompute",
        "verbose"
    ],
    "LinearRegression": [
        "copy_X",
        "fit_intercept",
        "n_jobs",
        "positive"
    ],
    "LinearSVR": [
        "C",
        "dual",
        "epsilon",
        "fit_intercept",
        "intercept_scaling",
        "loss",
        "max_iter",
        "random_state",
        "tol",
        "verbose"
    ],
    "MLPRegressor": [
        "activation",
        "alpha",
        "batch_size",
        "beta_1",
        "beta_2",
        "early_stopping",
        "epsilon",
        "hidden_layer_sizes",
        "learning_rate",
        "learning_rate_init",
        "max_fun",
        "max_iter",
        "momentum",
        "n_iter_no_change",
        "nesterovs_momentum",
        "power_t",
        "random_state",
        "shuffle",
        "solver",
        "tol",
        "validation_fraction",
        "verbose",
        "warm_start"
    ],
    "MultiTaskElasticNet": [
        "alpha",
        "copy_X",
        "fit_intercept",
        "l1_ratio",
        "max_iter",
        "random_state",
        "selection",
        "tol",
        "warm_start"
    ],
    "MultiTaskElasticNetCV": [
        "alphas",
        "copy_X",
        "cv",
        "eps",
        "fit_intercept",
        "l1_ratio",
        "max_iter",
        "n_alphas",
        "n_jobs",
        "random_state",
        "selection",
        "tol",
        "verbose"
    ],
    "MultiTaskLasso": [
        "alpha",
        "copy_X",
        "fit_intercept",
        "max_iter",
        "random_state",
        "selection",
        "tol",
        "warm_start"
    ],
    "MultiTaskLassoCV": [
        "alphas",
        "copy_X",
        "cv",
        "eps",
        "fit_intercept",
        "max_iter",
        "n_alphas",
        "n_jobs",
        "random_state",
        "selection",
        "tol",
        "verbose"
    ],
    "NuSVR": [
        "C",
        "cache_size",
        "coef0",
        "degree",
        "gamma",
        "kernel",
        "max_iter",
        "nu",
        "shrinking",
        "tol",
        "verbose"
    ],
    "OrthogonalMatchingPursuit": [
        "fit_intercept",
        "n_nonzero_coefs",
        "normalize",
        "precompute",
        "tol"
    ],
    "OrthogonalMatchingPursuitCV": [
        "copy",
        "cv",
        "fit_intercept",
        "max_iter",
        "n_jobs",
        "normalize",
        "verbose"
    ],
    "PLSCanonical": [
        "algorithm",
        "copy",
        "max_iter",
        "n_components",
        "scale",
        "tol"
    ],
    "PLSRegression": [
        "copy",
        "max_iter",
        "n_components",
        "scale",
        "tol"
    ],
    "PassiveAggressiveRegressor": [
        "C",
        "average",
        "early_stopping",
        "epsilon",
        "fit_intercept",
        "loss",
        "max_iter",
        "n_iter_no_change",
        "random_state",
        "shuffle",
        "tol",
        "validation_fraction",
        "verbose",
        "warm_start"
    ],
    "PoissonRegressor": [
        "alpha",
        "fit_intercept",
        "max_iter",
        "solver",
        "tol",
        "verbose",
        "warm_start"
    ],
    "QuantileRegressor": [
        "alpha",
        "fit_intercept",
        "quantile",
        "solver",
        "solver_options"
    ],
    "RANSACRegressor": [
        "estimator",
        "is_data_valid",
        "is_model_valid",
        "loss",
        "max_skips",
        "max_trials",
        "min_samples",
        "random_state",
        "residual_threshold",
        "stop_n_inliers",
        "stop_probability",
        "stop_score"
    ],
    "RadiusNeighborsRegressor": [
        "algorithm",
        "leaf_size",
        "metric",
        "metric_params",
        "n_jobs",
        "p",
        "radius",
        "weights"
    ],
    "RandomForestRegressor": [
        "bootstrap",
        "ccp_alpha",
        "criterion",
        "max_depth",
        "max_features",
        "max_leaf_nodes",
        "max_samples",
        "min_impurity_decrease",
        "min_samples_leaf",
        "min_samples_split",
        "min_weight_fraction_leaf",
        "n_estimators",
        "n_jobs",
        "oob_score",
        "random_state",
        "verbose",
        "warm_start"
    ],
    "Ridge": [
        "alpha",
        "copy_X",
        "fit_intercept",
        "max_iter",
        "positive",
        "random_state",
        "solver",
        "tol"
    ],
    "RidgeCV": [
        "alpha_per_target",
        "alphas",
        "cv",
        "fit_intercept",
        "gcv_mode",
        "scoring",
        "store_cv_values"
    ],
    "SGDRegressor": [
        "alpha",
        "average",
        "early_stopping",
        "epsilon",
        "eta0",
        "fit_intercept",
        "l1_ratio",
        "learning_rate",
        "loss",
        "max_iter",
        "n_iter_no_change",
        "penalty",
        "power_t",
        "random_state",
        "shuffle",
        "tol",
        "validation_fraction",
        "verbose",
        "warm_start"
    ],
    "SVR": [
        "C",
        "cache_size",
        "coef0",
        "degree",
        "epsilon",
        "gamma",
        "kernel",
        "max_iter",
        "shrinking",
        "tol",
        "verbose"
    ],
    "TheilSenRegressor": [
        "copy_X",
        "fit_intercept",
        "max_iter",
        "max_subpopulation",
        "n_jobs",
        "n_subsamples",
        "random_state",
        "tol",
        "verbose"
    ],
    "TransformedTargetRegressor": [
        "check_inverse",
        "func",
        "inverse_func",
        "regressor",
        "transformer"
    ],
    "TweedieRegressor": [
        "alpha",
        "fit_intercept",
        "link",
        "max_iter",
        "power",
        "solver",
        "tol",
        "verbose",
        "warm_start"
    ]
}